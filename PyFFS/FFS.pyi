from typing import List

class PyCacheData:
    def __init__(self, *args, **kwargs) -> None: ...

class PyIndexerData:
    def __init__(self, *args, **kwargs) -> None: ...

class PyTreeData:
    def __init__(self, *args, **kwargs) -> None: ...

def cache_read(path: str) -> PyCacheData: ...
def cache_write(path: str, cache: PyCacheData) -> bool: ...
def dfs_search(path: str, search: str, multithread: bool) -> List[bytes]: ...
def indexer_create(path: str) -> PyIndexerData: ...
def indexer_read(cache: PyCacheData) -> PyIndexerData: ...
def indexer_search(search: str, index: PyIndexerData) -> List[bytes]: ...
def indexer_write(index: PyIndexerData) -> PyCacheData: ...
def linear_search(path: str, search: str, multithread: bool) -> List[bytes]: ...
def tree_create(path: str) -> PyTreeData: ...
def tree_search(search: str, cache: PyCacheData) -> List[bytes]: ...
def tree_write(tree: PyTreeData) -> PyCacheData: ...
